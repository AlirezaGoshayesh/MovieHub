// Generated by Dagger (https://dagger.dev).
package com.test.moviehub.di;

import com.test.moviehub.data.remote.RemoteDataSourceImpl;
import com.test.moviehub.domain.Repository;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataModule_ProvideRepositoryFactory implements Factory<Repository> {
  private final Provider<RemoteDataSourceImpl> remoteDataSourceImplProvider;

  public DataModule_ProvideRepositoryFactory(
      Provider<RemoteDataSourceImpl> remoteDataSourceImplProvider) {
    this.remoteDataSourceImplProvider = remoteDataSourceImplProvider;
  }

  @Override
  public Repository get() {
    return provideRepository(remoteDataSourceImplProvider.get());
  }

  public static DataModule_ProvideRepositoryFactory create(
      Provider<RemoteDataSourceImpl> remoteDataSourceImplProvider) {
    return new DataModule_ProvideRepositoryFactory(remoteDataSourceImplProvider);
  }

  public static Repository provideRepository(RemoteDataSourceImpl remoteDataSourceImpl) {
    return Preconditions.checkNotNullFromProvides(DataModule.INSTANCE.provideRepository(remoteDataSourceImpl));
  }
}
